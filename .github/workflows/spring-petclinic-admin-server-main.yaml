# This is a basic workflow to help you get started with Actions
#
name: Build & Push Admin-Server Image

#on: workflow_dispatch
on:
  push:
    branches: [ main ]
    paths-ignore: 
      - kubernetes/**
      - .github/workflows/**
      - scripts/**
      - k8s/**
      - docker/**
      - docs/**
      - ci/**
      - dynatrace/**
      - .mvn/wrapper
      - spring-petclinic-api-gateway/**
      - spring-petclinic-config-server/**
      - spring-petclinic-customers-service/**
      - spring-petclinic-discovery-server/**
      - spring-petclinic-vets-service/**
      - spring-petclinic-visits-service/**
  pull_request:
    branches: [ main ]
    paths-ignore:
      - kubernetes/**
      - .github/workflows/**
      - scripts/**
      - k8s/**
      - docker/**
      - docs/**
      - ci/**
      - dynatrace/**
      - .mvn/wrapper
      - spring-petclinic-api-gateway/**
      - spring-petclinic-config-server/**
      - spring-petclinic-customers-service/**
      - spring-petclinic-discovery-server/**
      - spring-petclinic-vets-service/**
      - spring-petclinic-visits-service/**

env:
  CONTAINER_REGISTRY_URL: https://registry.hub.docker.com
  REGISTRY_USERID: omearaj
  IMAGE_NAME: admin-server
  IMAGE_TAG: latest 

jobs:
#  snyk_vulnerability_check:
#    
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      
#      - name: Cache local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      
#      - name: Run Snyk test
#        uses: snyk/actions/maven@master
#        continue-on-error: true
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
#        with:
#          command: test
#      
#      - name: Run Snyk monitor
#        uses: snyk/actions/maven@master
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
#        with:
#          command: monitor
#          args: --severity-threshold=high

  build_mvn_aritfact:

    #needs: snyk_vulnerability_check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
      
    - name: Build with Maven
      run: mvn -Pk8s -pl spring-petclinic-admin-server/ spring-boot:build-image -DREPOSITORY_PREFIX=${{ env.REGISTRY_USERID }} && ${{ env.github_workspace }}/scripts/pushImages.sh
       
    - name: Dopcker login   
      run: |
       echo "${{ secrets.DOCKER_KEY }}" | docker login ${{ env.CONTAINER_REGISTRY_URL }} -u ${{ env.REGISTRY_USERID }} --password-stdin
    
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
    
    - name: Docker push
      run: docker push ${{ env.REGISTRY_USERID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      
#    - uses: actions/checkout@master
#    - name: Publish to Registry
#      uses: elgohr/Publish-Docker-Github-Action@v5
#      with:
#       name: docker.io/omearaj/admin-server:latest
#       username: ${{ env.REGISTRY_USERID }}
#       password: ${{ secrets.DOCKER_KEY }}
       #default_branch: main
    
        
